import{_ as h,F as q,G as K,K as ne,e as oe,ai as D,l as I,O as B,aj as ie,ak as ce,al as L,d as _,b as pe,a as de,q as he,t as ue,g as me,s as fe,H as ye,am as ge,z as Se}from"./mermaid-vendor-Dz_wy4wU.js";import{s as xe}from"./chunk-QN33PNHL-CE-wcHU3.js";import{p as be}from"./chunk-4BX2VUAB-BLFfBkKy.js";import{p as ve}from"./treemap-75Q7IDZK-D-EMqAc_.js";import"./feature-graph-DKX8Qmlo.js";import"./react-vendor-CI9PN-jl.js";import"./graph-vendor-C2ay-rh5.js";import"./ui-vendor-BNB5trKt.js";import"./utils-vendor-BaQYYNaI.js";import"./_baseUniq-DPw5BM4N.js";import"./_basePickBy-xDrqOjBI.js";import"./clone-BbHryxVc.js";var F,U=(F=class{constructor(){this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.setAccTitle=pe,this.getAccTitle=de,this.setDiagramTitle=he,this.getDiagramTitle=ue,this.getAccDescription=me,this.setAccDescription=fe}getNodes(){return this.nodes}getConfig(){const a=ye,o=K();return q({...a.treemap,...o.treemap??{}})}addNode(a,o){this.nodes.push(a),this.levels.set(a,o),o===0&&(this.outerNodes.push(a),this.root??(this.root=a))}getRoot(){return{name:"",children:this.outerNodes}}addClass(a,o){const s=this.classes.get(a)??{id:a,styles:[],textStyles:[]},c=o.replace(/\\,/g,"§§§").replace(/,/g,";").replace(/§§§/g,",").split(";");c&&c.forEach(r=>{ge(r)&&(s!=null&&s.textStyles?s.textStyles.push(r):s.textStyles=[r]),s!=null&&s.styles?s.styles.push(r):s.styles=[r]}),this.classes.set(a,s)}getClasses(){return this.classes}getStylesForClass(a){var o;return((o=this.classes.get(a))==null?void 0:o.styles)??[]}clear(){Se(),this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.root=void 0}},h(F,"TreeMapDB"),F);function J(p){if(!p.length)return[];const a=[],o=[];return p.forEach(s=>{const c={name:s.name,children:s.type==="Leaf"?void 0:[]};for(c.classSelector=s==null?void 0:s.classSelector,s!=null&&s.cssCompiledStyles&&(c.cssCompiledStyles=[s.cssCompiledStyles]),s.type==="Leaf"&&s.value!==void 0&&(c.value=s.value);o.length>0&&o[o.length-1].level>=s.level;)o.pop();if(o.length===0)a.push(c);else{const r=o[o.length-1].node;r.children?r.children.push(c):r.children=[c]}s.type!=="Leaf"&&o.push({node:c,level:s.level})}),a}h(J,"buildHierarchy");var Ce=h((p,a)=>{be(p,a);const o=[];for(const r of p.TreemapRows??[])r.$type==="ClassDefStatement"&&a.addClass(r.className??"",r.styleText??"");for(const r of p.TreemapRows??[]){const d=r.item;if(!d)continue;const m=r.indent?parseInt(r.indent):0,V=we(d),l=d.classSelector?a.getStylesForClass(d.classSelector):[],z=l.length>0?l.join(";"):void 0,b={level:m,name:V,type:d.$type,value:d.value,classSelector:d.classSelector,cssCompiledStyles:z};o.push(b)}const s=J(o),c=h((r,d)=>{for(const m of r)a.addNode(m,d),m.children&&m.children.length>0&&c(m.children,d+1)},"addNodesRecursively");c(s,0)},"populate"),we=h(p=>p.name?String(p.name):"","getItemName"),Q={parser:{yy:void 0},parse:h(async p=>{var a;try{const s=await ve("treemap",p);I.debug("Treemap AST:",s);const c=(a=Q.parser)==null?void 0:a.yy;if(!(c instanceof U))throw new Error("parser.parser?.yy was not a TreemapDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.");Ce(s,c)}catch(o){throw I.error("Error parsing treemap:",o),o}},"parse")},Te=10,$=10,M=25,Le=h((p,a,o,s)=>{const c=s.db,r=c.getConfig(),d=r.padding??Te,m=c.getDiagramTitle(),V=c.getRoot(),{themeVariables:l}=K();if(!V)return;const z=m?30:0,b=ne(a),G=r.nodeWidth?r.nodeWidth*$:960,O=r.nodeHeight?r.nodeHeight*$:500,H=G,X=O+z;b.attr("viewBox",`0 0 ${H} ${X}`),oe(b,X,H,r.useMaxWidth);let v;try{const e=r.valueFormat||",";if(e==="$0,0")v=h(t=>"$"+D(",")(t),"valueFormat");else if(e.startsWith("$")&&e.includes(",")){const t=/\.\d+/.exec(e),n=t?t[0]:"";v=h(u=>"$"+D(","+n)(u),"valueFormat")}else if(e.startsWith("$")){const t=e.substring(1);v=h(n=>"$"+D(t||"")(n),"valueFormat")}else v=D(e)}catch(e){I.error("Error creating format function:",e),v=D(",")}const N=B().range(["transparent",l.cScale0,l.cScale1,l.cScale2,l.cScale3,l.cScale4,l.cScale5,l.cScale6,l.cScale7,l.cScale8,l.cScale9,l.cScale10,l.cScale11]),Z=B().range(["transparent",l.cScalePeer0,l.cScalePeer1,l.cScalePeer2,l.cScalePeer3,l.cScalePeer4,l.cScalePeer5,l.cScalePeer6,l.cScalePeer7,l.cScalePeer8,l.cScalePeer9,l.cScalePeer10,l.cScalePeer11]),W=B().range([l.cScaleLabel0,l.cScaleLabel1,l.cScaleLabel2,l.cScaleLabel3,l.cScaleLabel4,l.cScaleLabel5,l.cScaleLabel6,l.cScaleLabel7,l.cScaleLabel8,l.cScaleLabel9,l.cScaleLabel10,l.cScaleLabel11]);m&&b.append("text").attr("x",H/2).attr("y",z/2).attr("class","treemapTitle").attr("text-anchor","middle").attr("dominant-baseline","middle").text(m);const j=b.append("g").attr("transform",`translate(0, ${z})`).attr("class","treemapContainer"),ee=ie(V).sum(e=>e.value??0).sort((e,t)=>(t.value??0)-(e.value??0)),Y=ce().size([G,O]).paddingTop(e=>e.children&&e.children.length>0?M+$:0).paddingInner(d).paddingLeft(e=>e.children&&e.children.length>0?$:0).paddingRight(e=>e.children&&e.children.length>0?$:0).paddingBottom(e=>e.children&&e.children.length>0?$:0).round(!0)(ee),te=Y.descendants().filter(e=>e.children&&e.children.length>0),A=j.selectAll(".treemapSection").data(te).enter().append("g").attr("class","treemapSection").attr("transform",e=>`translate(${e.x0},${e.y0})`);A.append("rect").attr("width",e=>e.x1-e.x0).attr("height",M).attr("class","treemapSectionHeader").attr("fill","none").attr("fill-opacity",.6).attr("stroke-width",.6).attr("style",e=>e.depth===0?"display: none;":""),A.append("clipPath").attr("id",(e,t)=>`clip-section-${a}-${t}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-12)).attr("height",M),A.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class",(e,t)=>`treemapSection section${t}`).attr("fill",e=>N(e.data.name)).attr("fill-opacity",.6).attr("stroke",e=>Z(e.data.name)).attr("stroke-width",2).attr("stroke-opacity",.4).attr("style",e=>{if(e.depth===0)return"display: none;";const t=L({cssCompiledStyles:e.data.cssCompiledStyles});return t.nodeStyles+";"+t.borderStyles.join(";")}),A.append("text").attr("class","treemapSectionLabel").attr("x",6).attr("y",M/2).attr("dominant-baseline","middle").text(e=>e.depth===0?"":e.data.name).attr("font-weight","bold").attr("style",e=>{if(e.depth===0)return"display: none;";const t="dominant-baseline: middle; font-size: 12px; fill:"+W(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;",n=L({cssCompiledStyles:e.data.cssCompiledStyles});return t+n.labelStyles.replace("color:","fill:")}).each(function(e){if(e.depth===0)return;const t=_(this),n=e.data.name;t.text(n);const u=e.x1-e.x0,y=6;let g;r.showValues!==!1&&e.value?g=u-10-30-10-y:g=u-y-6;const S=Math.max(15,g),i=t.node();if(i.getComputedTextLength()>S){let f=n;for(;f.length>0;){if(f=n.substring(0,f.length-1),f.length===0){t.text("..."),i.getComputedTextLength()>S&&t.text("");break}if(t.text(f+"..."),i.getComputedTextLength()<=S)break}}}),r.showValues!==!1&&A.append("text").attr("class","treemapSectionValue").attr("x",e=>e.x1-e.x0-10).attr("y",M/2).attr("text-anchor","end").attr("dominant-baseline","middle").text(e=>e.value?v(e.value):"").attr("font-style","italic").attr("style",e=>{if(e.depth===0)return"display: none;";const t="text-anchor: end; dominant-baseline: middle; font-size: 10px; fill:"+W(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;",n=L({cssCompiledStyles:e.data.cssCompiledStyles});return t+n.labelStyles.replace("color:","fill:")});const ae=Y.leaves(),E=j.selectAll(".treemapLeafGroup").data(ae).enter().append("g").attr("class",(e,t)=>`treemapNode treemapLeafGroup leaf${t}${e.data.classSelector?` ${e.data.classSelector}`:""}x`).attr("transform",e=>`translate(${e.x0},${e.y0})`);E.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class","treemapLeaf").attr("fill",e=>e.parent?N(e.parent.data.name):N(e.data.name)).attr("style",e=>L({cssCompiledStyles:e.data.cssCompiledStyles}).nodeStyles).attr("fill-opacity",.3).attr("stroke",e=>e.parent?N(e.parent.data.name):N(e.data.name)).attr("stroke-width",3),E.append("clipPath").attr("id",(e,t)=>`clip-${a}-${t}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-4)).attr("height",e=>Math.max(0,e.y1-e.y0-4)),E.append("text").attr("class","treemapLabel").attr("x",e=>(e.x1-e.x0)/2).attr("y",e=>(e.y1-e.y0)/2).attr("style",e=>{const t="text-anchor: middle; dominant-baseline: middle; font-size: 38px;fill:"+W(e.data.name)+";",n=L({cssCompiledStyles:e.data.cssCompiledStyles});return t+n.labelStyles.replace("color:","fill:")}).attr("clip-path",(e,t)=>`url(#clip-${a}-${t})`).text(e=>e.data.name).each(function(e){const t=_(this),n=e.x1-e.x0,u=e.y1-e.y0,y=t.node(),g=4,T=n-2*g,S=u-2*g;if(T<10||S<10){t.style("display","none");return}let i=parseInt(t.style("font-size"),10);const C=8,x=28,f=.6,w=6,k=2;for(;y.getComputedTextLength()>T&&i>C;)i--,t.style("font-size",`${i}px`);let P=Math.max(w,Math.min(x,Math.round(i*f))),R=i+k+P;for(;R>S&&i>C&&(i--,P=Math.max(w,Math.min(x,Math.round(i*f))),!(P<w&&i===C));)t.style("font-size",`${i}px`),R=i+k+P;t.style("font-size",`${i}px`),(y.getComputedTextLength()>T||i<C||S<i)&&t.style("display","none")}),r.showValues!==!1&&E.append("text").attr("class","treemapValue").attr("x",t=>(t.x1-t.x0)/2).attr("y",function(t){return(t.y1-t.y0)/2}).attr("style",t=>{const n="text-anchor: middle; dominant-baseline: hanging; font-size: 28px;fill:"+W(t.data.name)+";",u=L({cssCompiledStyles:t.data.cssCompiledStyles});return n+u.labelStyles.replace("color:","fill:")}).attr("clip-path",(t,n)=>`url(#clip-${a}-${n})`).text(t=>t.value?v(t.value):"").each(function(t){const n=_(this),u=this.parentNode;if(!u){n.style("display","none");return}const y=_(u).select(".treemapLabel");if(y.empty()||y.style("display")==="none"){n.style("display","none");return}const g=parseFloat(y.style("font-size")),T=28,S=.6,i=6,C=2,x=Math.max(i,Math.min(T,Math.round(g*S)));n.style("font-size",`${x}px`);const w=(t.y1-t.y0)/2+g/2+C;n.attr("y",w);const k=t.x1-t.x0,se=t.y1-t.y0-4,re=k-8;n.node().getComputedTextLength()>re||w+x>se||x<i?n.style("display","none"):n.style("display",null)});const le=r.diagramPadding??8;xe(b,le,"flowchart",(r==null?void 0:r.useMaxWidth)||!1)},"draw"),$e=h(function(p,a){return a.db.getClasses()},"getClasses"),Fe={draw:Le,getClasses:$e},ze={sectionStrokeColor:"black",sectionStrokeWidth:"1",sectionFillColor:"#efefef",leafStrokeColor:"black",leafStrokeWidth:"1",leafFillColor:"#efefef",labelColor:"black",labelFontSize:"12px",valueFontSize:"10px",valueColor:"black",titleColor:"black",titleFontSize:"14px"},Ne=h(({treemap:p}={})=>{const a=q(ze,p);return`
  .treemapNode.section {
    stroke: ${a.sectionStrokeColor};
    stroke-width: ${a.sectionStrokeWidth};
    fill: ${a.sectionFillColor};
  }
  .treemapNode.leaf {
    stroke: ${a.leafStrokeColor};
    stroke-width: ${a.leafStrokeWidth};
    fill: ${a.leafFillColor};
  }
  .treemapLabel {
    fill: ${a.labelColor};
    font-size: ${a.labelFontSize};
  }
  .treemapValue {
    fill: ${a.valueColor};
    font-size: ${a.valueFontSize};
  }
  .treemapTitle {
    fill: ${a.titleColor};
    font-size: ${a.titleFontSize};
  }
  `},"getStyles"),Ae=Ne,Xe={parser:Q,get db(){return new U},renderer:Fe,styles:Ae};export{Xe as diagram};
