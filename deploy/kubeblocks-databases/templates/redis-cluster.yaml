{{- if .Values.redis.enabled }}
apiVersion: apps.kubeblocks.io/v1
kind: Cluster
metadata:
  name: {{ .Values.redis.name }}
  namespace: {{ .Values.global.namespace }}
spec:
  terminationPolicy: {{ .Values.global.terminationPolicy }}
  clusterDef: redis
  topology: {{ .Values.redis.topology }} # Use topology from values
  componentSpecs:
    - name: redis # Main Redis component
      {{- if .Values.redis.serviceVersion }} # serviceVersion is optional for some clusterDefs
      serviceVersion: "{{ .Values.redis.serviceVersion }}"
      {{- end }}
      {{- if (not ( eq .Values.redis.disableExporter nil )) }} # disableExporter is also optional
      disableExporter: {{ .Values.redis.disableExporter }}
      {{- end }}
      replicas: {{ .Values.redis.replicas }}
      systemAccounts:
        - name: default
          secretRef:
            name: {{ .Values.redis.customSecretName }}
            namespace: {{ .Values.redis.customSecretNamespace }}
      resources:
        {{- toYaml .Values.redis.resources | nindent 8 }}
      volumeClaimTemplates:
        - name: data
          spec:
            storageClassName: "" # Or make this configurable
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ .Values.redis.storage }}
{{- end }}
